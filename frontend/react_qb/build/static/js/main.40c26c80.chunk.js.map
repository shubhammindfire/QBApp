{"version":3,"sources":["components/ui/widgets/TextField.js","redux/localAuth/localAuthTypes.js","redux/localAuth/localAuthActions.js","Constants.js","components/utils/checkSessionExpired.js","components/ui/screens/Login.js","components/ui/screens/Register.js","components/ui/widgets/ErrorModal.js","components/ui/widgets/notus-react/SideBar.js","components/ui/widgets/SuccessModal.js","components/ui/widgets/LoadingModal.js","components/ui/screens/Portal.js","components/ui/widgets/notus-react/CustomerAndItemTable.js","redux/quickbooks/customer/customerTypes.js","components/ui/screens/Customers.js","redux/quickbooks/customer/customerActions.js","redux/quickbooks/invoice/invoiceTypes.js","redux/quickbooks/invoice/invoiceActions.js","components/ui/widgets/notus-react/InvoiceTable.js","components/ui/screens/Invoices.js","redux/quickbooks/item/itemTypes.js","components/ui/screens/Items.js","redux/quickbooks/item/itemActions.js","components/utils/addNewInvoice.js","components/utils/getQBOCustomerId.js","components/ui/widgets/InvoiceItemInInvoiceTable.js","components/utils/editInvoice.js","components/ui/screens/InvoiceDetail.js","components/utils/validateData.js","components/ui/screens/NoPageFound.js","App.js","reportWebVitals.js","redux/localAuth/localAuthReducer.js","redux/quickbooks/invoice/invoiceReducer.js","redux/quickbooks/item/itemReducer.js","redux/quickbooks/customer/customerReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["TextField","props","label","placeholder","type","onChange","data-test","className","SET_LOCAL_AUTH_JWT","setLocalAuthJwt","jwt","payload","BASE_SERVER_URL","FETCH_DATA_FROM_QBO_URL","GET_CURRENT_USER","DELETE_INVOICE_BY_ID","POST_INVOICE","PATCH_INVOICE","GET_ALL_ITEMS","GET_ITEM_BY_ID","GET_ALL_CUSTOMERS","LOGIN_ROUTE","REGISTER_ROUTE","PORTAL_ROUTE","PORTAL_CUSTOMERS_ROUTE","PORTAL_ITEMS_ROUTE","PORTAL_INVOICES_ROUTE","PORTAL_INVOICE_DETAIL_ROUTE","checkSessionExpired","session_jwt","JSON","parse","localStorage","getItem","expiry","Date","getTime","Login","undefined","setItem","isQBOConnected","isSessionExpired","location","state","useSelector","localAuthReducer","dispatch","useDispatch","useState","username","setUsername","password","setPassword","loginError","setLoginError","to","onSubmit","e","preventDefault","axios","post","then","response","status","data","itemToLocalStorage","value","stringify","message","catch","error","target","disabled","onClick","get","headers","Authorization","window","href","authUrl","Register","history","useHistory","realmId","setRealmId","usernameError","setUsernameError","passwordError","setPasswordError","realmIdError","setRealmIdError","successMessage","setSuccessMessage","setTimeout","push","violations","forEach","violation","propertyPath","ErrorModal","setShowErrorModal","icon","faExclamationCircle","color","pathname","Sidebar","React","collapseShow","setCollapseShow","faBars","faTimes","indexOf","faUser","faIcons","faList","removeItem","faPowerOff","SuccessModal","setShowSuccessModal","faCheckCircle","LoadingModal","height","width","Portal","showLoading","setShowLoading","showSuccessModal","showErrorModal","errorModalType","setErrorModalType","a","currentUser","code","useEffect","row","title","rows","i","length","displayName","name","companyName","email","description","billingAddress","salesPrice","toFixed","phoneNumber","costPrice","openBalance","quantity","id","CustomerAndItemTable","ADD_ALL_CUSTOMERS","REMOVE_ALL_CUSTOMERS","Customers","customers","customerReducer","setIsSessionExpired","addAllCustomers","ADD_ALL_INVOICES","REMOVE_ALL_INVOICES","REMOVE_INVOICE_BY_INDEX","ADD_CURRENT_INVOICE","ADD_CURRENT_INVOICE_ITEMS","DELETE_CURRENT_INVOICE_ITEM_BY_INDEX","REMOVE_CURRENT_INVOICE","REMOVE_CURRENT_INVOICE_ITEMS","removeInvoiceByIndex","index","addCurrentInvoice","invoice","addCurrentInvoiceItems","invoiceItems","invoices","setShowLoadingModal","handleDelete","invoiceTableId","delete","isOverdue","dueDateString","dueDate","dueDateEpoch","epochDiff","diffInDays","Math","floor","abs","balance","invoiceDate","split","toString","reverse","join","invoiceNumber","customerName","amount","operation","faEye","faPen","faTrashAlt","InvoiceTable","showLoadingModal","Invoices","invoiceReducer","addAllInvoices","ADD_ALL_ITEMS","REMOVE_ALL_ITEMS","Items","items","itemReducer","addAllItems","getQBOItemId","itemTableId","success","qBOId","qboCustomerId","totalAmount","invoiceItemsToPost","qboItemId","res","itemDescription","itemAmount","itemName","rate","itemQBOId","customerQBOId","addNewInvoice","getQBOCustomerId","customer","Error","InvoiceItemInInvoiceTable","invoiceItem","updateItemsCallback","deleteItemCallback","setItemName","setItemDescription","setQuantity","setRate","setItemAmount","itemNameListAsString","newinvoiceItem","handleChange","attribute","includes","j","parseInt","list","itemNameList","getItemNameList","invoiceId","fKItems","patch","editInvoice","InvoiceDetail","reduxState","currentInvoiceItems","currentInvoice","stateInvoice","setStateInvoice","stateInvoiceItems","setStateInvoiceItems","setCustomers","setItems","setCustomerName","customerEmail","setCustomerEmail","setBalance","setBillingAddress","setDueDate","setInvoiceDate","setTotalAmount","amountReceived","customerNameError","setCustomerNameError","invoiceDateError","setInvoiceDateError","dueDateError","setDueDateError","totalAmountError","setTotalAmountError","invoiceItemsError","setInvoiceItemsError","customerNameListAsString","validateAll","validateCustomerName","validateInvoiceDate","validateDueDate","validateEmptyInvoiceItem","validateInvalidInvoiceItem","validateInvoiceItemQuantity","isSuccess","formattedInvoiceDate","formattedDueDate","faHistory","size","htmlFor","customerNameList","getCustomerNameList","cols","reduxInvoiceItems","updateStateInvoiceItems","newInvoiceItem","updateAmount","deleteStateInvoiceItem","tempInvoiceItems","slice","deleteCurrentInvoiceItemByIndex","total","reduxInvoiceItem","showItems","createdAt","updatedAt","userId","handleAddItem","faPlusCircle","handleSaveAndClose","NoPageFound","App","token","path","component","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c26c80.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextField(props) {\n    const { label, placeholder, type, onChange } = props;\n    return (\n        <div>\n            <label data-test=\"textfield-label\">{label}</label>\n            <input\n                data-test=\"textfield\"\n                className=\"block m-auto w-full my-2 px-2 border-gray-400 focus:border-black border-2 leading-10 rounded-md\"\n                onChange={onChange}\n                type={type}\n                placeholder={placeholder}\n            />\n        </div>\n    );\n}\n\nTextField.propTypes = {\n    label: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default TextField;\n","export const SET_LOCAL_AUTH_JWT = \"SET_LOCAL_AUTH_JWT\";\n","import { SET_LOCAL_AUTH_JWT } from \"./localAuthTypes.js\";\n\nexport const setLocalAuthJwt = (jwt = \"\") => {\n    return {\n        type: SET_LOCAL_AUTH_JWT,\n        payload: jwt,\n    };\n};\n","// server urls\n// FOR PROD ENV\nexport const BASE_SERVER_URL = \"http://backend.qbapp.com\";\n// FOR DEV ENV\n// export const BASE_SERVER_URL = \"http://localhost:8000\";\nexport const REGISTER_URL = BASE_SERVER_URL + \"/api/users\";\nexport const LOGIN_URL = BASE_SERVER_URL + \"/api/login\";\nexport const CONNECT_TO_QBO_URL = BASE_SERVER_URL + \"/qb/connect\";\nexport const FETCH_DATA_FROM_QBO_URL =\n    BASE_SERVER_URL + \"/qb/fetch_data_from_qbo\"; // actual endpoint - /qb/fetch_data_from_qbo/{userId}\nexport const GET_CURRENT_USER = BASE_SERVER_URL + \"/api/user\";\nexport const GET_ALL_INVOICES = BASE_SERVER_URL + \"/api/invoices\";\nexport const GET_INVOICE_BY_ID = BASE_SERVER_URL + \"/api/invoices\"; // actual endpoint - /api/invoices/{id}\nexport const DELETE_INVOICE_BY_ID = BASE_SERVER_URL + \"/api/invoices\"; // actual endpoint - /api/invoices/{id}\nexport const POST_INVOICE = BASE_SERVER_URL + \"/api/invoices\";\nexport const PATCH_INVOICE = BASE_SERVER_URL + \"/api/invoices\"; // actual endpoint - /api/invoices/{id}\nexport const GET_ALL_ITEMS = BASE_SERVER_URL + \"/api/items\";\nexport const GET_ITEM_BY_ID = BASE_SERVER_URL + \"/api/items\"; // actual endpoint - /api/items/{id}\nexport const GET_ALL_CUSTOMERS = BASE_SERVER_URL + \"/api/customers\";\nexport const GET_CUSTOMER_BY_ID = BASE_SERVER_URL + \"/api/customers\"; // actual endpoint - /api/customers/{id}\n\n// react routes\nexport const BASE_REACT_ROUTE = \"http://localhost:3000\";\nexport const LOGIN_ROUTE = \"/login\";\nexport const REGISTER_ROUTE = \"/register\";\nexport const PORTAL_ROUTE = \"/portal\";\nexport const PORTAL_CUSTOMERS_ROUTE = \"/portal/customers\";\nexport const PORTAL_ITEMS_ROUTE = \"/portal/items\";\nexport const PORTAL_INVOICES_ROUTE = \"/portal/invoices\";\nexport const PORTAL_INVOICE_DETAIL_ROUTE = \"/portal/invoice/detail\";\n","// this function returns true if the session is expired else false\nexport default function checkSessionExpired() {\n    const session_jwt = JSON.parse(localStorage.getItem(\"session-jwt\"));\n\n    if (session_jwt !== null) return session_jwt.expiry < new Date().getTime();\n    return false;\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport TextField from \"../widgets/TextField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setLocalAuthJwt } from \"./../../../redux/localAuth/localAuthActions.js\";\nimport {\n    LOGIN_URL,\n    CONNECT_TO_QBO_URL,\n    REGISTER_ROUTE,\n    PORTAL_ROUTE,\n} from \"./../../../Constants.js\";\nimport checkSessionExpired from \"./../../utils/checkSessionExpired.js\";\n\nfunction Login(props) {\n    if (localStorage.getItem(\"isQBOConnected\") === undefined)\n        localStorage.setItem(\"isQBOConnected\", false);\n    // converting 'true' or 'false' from local storage to true or false\n    const isQBOConnected = localStorage.getItem(\"isQBOConnected\") === \"true\";\n\n    const isSessionExpired =\n        props.location.state !== undefined\n            ? props.location.state.isSessionExpired\n            : false;\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginError, setLoginError] = useState(null);\n\n    function handleUsernameChange(e) {\n        setUsername(e.target.value);\n        setLoginError(null);\n    }\n\n    function handlePasswordChange(e) {\n        setPassword(e.target.value);\n        setLoginError(null);\n    }\n\n    function handleQBOConnect(e) {\n        e.preventDefault();\n\n        axios\n            .get(CONNECT_TO_QBO_URL, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                if (response.status === 200) {\n                    window.location.href = response.data.authUrl;\n                } else {\n                }\n            });\n    }\n\n    function handleLogin(e) {\n        e.preventDefault();\n\n        axios\n            .post(LOGIN_URL, {\n                username: username,\n                password: password,\n            })\n            .then((response) => {\n                if (response.status === 200) {\n                    dispatch(setLocalAuthJwt(response.data));\n                    const ttl = 3600000; // time for expiry in milliseconds\n                    const itemToLocalStorage = {\n                        value: response.data,\n                        expiry: new Date().getTime() + ttl,\n                    };\n                    localStorage.setItem(\n                        \"session-jwt\",\n                        JSON.stringify(itemToLocalStorage)\n                    );\n                } else {\n                    setLoginError(response.message);\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    setLoginError(error.response.data.message);\n                }\n            });\n    }\n\n    return (\n        <>\n            {isQBOConnected === true &&\n            jwt !== null &&\n            checkSessionExpired() === false ? (\n                // if the user is logged in and session is not expired then redirect to portal\n                <Redirect to={PORTAL_ROUTE} />\n            ) : (\n                <div className=\"flex flex-col justify-center items-center\">\n                    {isSessionExpired ? (\n                        <p className=\"text-red-600\">\n                            Session Expired Login again\n                        </p>\n                    ) : null}\n                    <p className=\"mt-4 text-4xl\">Login</p>\n                    <div className=\"rounded w-96 m-4 bg-gray-50 shadow-lg p-6 align-middle\">\n                        <form onSubmit={handleLogin}>\n                            <TextField\n                                label=\"Username\"\n                                placeholder=\"Enter username\"\n                                type=\"text\"\n                                onChange={handleUsernameChange}\n                            />\n                            <TextField\n                                label=\"Password\"\n                                placeholder=\"Enter password\"\n                                type=\"password\"\n                                onChange={handlePasswordChange}\n                            />\n                            {loginError !== null ? (\n                                <p className=\"text-red-600\">{loginError}</p>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                className={\n                                    jwt === null || jwt === \"\"\n                                        ? \"submitBtn bg-blue-600\"\n                                        : \"submitBtn bg-blue-200\"\n                                }\n                                disabled={jwt !== null && jwt !== \"\"}\n                            >\n                                Login\n                            </button>\n\n                            {jwt !== null ? (\n                                <p className=\"text-green-600\">\n                                    Login successfull, now connect to Quickbooks\n                                </p>\n                            ) : null}\n                            <button\n                                type=\"button\"\n                                onClick={handleQBOConnect}\n                                className={\n                                    jwt === null || jwt === \"\"\n                                        ? \"submitBtn bg-blue-200\"\n                                        : \"submitBtn bg-blue-600\"\n                                }\n                                disabled={jwt === null || jwt === \"\"}\n                            >\n                                Connect to QuickBooks\n                            </button>\n                        </form>\n                    </div>\n                    <div>\n                        Not a registered user?\n                        <Link to={REGISTER_ROUTE}>\n                            <p className=\"inline text-blue-600\">\n                                {\" \"}\n                                Register Instead\n                            </p>\n                        </Link>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport TextField from \"../widgets/TextField\";\nimport {\n    REGISTER_URL,\n    LOGIN_ROUTE,\n    PORTAL_ROUTE,\n} from \"./../../../Constants.js\";\nimport { useSelector } from \"react-redux\";\nimport checkSessionExpired from \"../../utils/checkSessionExpired\";\n\nfunction Register() {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [realmId, setRealmId] = useState(\"\");\n\n    const [usernameError, setUsernameError] = useState(null);\n    const [passwordError, setPasswordError] = useState(null);\n    const [realmIdError, setRealmIdError] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n\n    function handleUsernameChange(e) {\n        setUsernameError(null);\n        setUsername(e.target.value);\n    }\n\n    function handlePasswordChange(e) {\n        setPasswordError(null);\n        setPassword(e.target.value);\n    }\n\n    function handleRealmIdChange(e) {\n        setRealmIdError(null);\n        setRealmId(e.target.value);\n    }\n\n    function handleRegister(e) {\n        e.preventDefault();\n\n        axios\n            .post(REGISTER_URL, {\n                username: username,\n                password: password,\n                realmId: realmId,\n            })\n            .then((response) => {\n                if (response.status === 201) {\n                    setSuccessMessage(\"User registered successfully\");\n                    // delay and then route to /login after successfull register\n                    setTimeout(() => {\n                        history.push({ LOGIN_ROUTE });\n                    }, 1500);\n                } else {\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    const violations = error.response.data.violations;\n\n                    violations.forEach((violation) => {\n                        if (violation[\"propertyPath\"] === \"username\")\n                            setUsernameError(violation[\"message\"]);\n                        if (violation.propertyPath === \"password\")\n                            setPasswordError(violation[\"message\"]);\n                        if (violation.propertyPath === \"realmId\")\n                            setRealmIdError(violation[\"message\"]);\n                    });\n                }\n                // console.error(`Axios Error: ${error}`);\n            });\n    }\n\n    return (\n        <>\n            {jwt !== null && checkSessionExpired() === false ? (\n                // if the user is logged in and session is not expired then redirect to portal\n                <Redirect to={PORTAL_ROUTE} />\n            ) : (\n                <div className=\"flex flex-col justify-center items-center\">\n                    <p className=\"mt-4 text-4xl\">Register</p>\n                    <div className=\"rounded w-96 m-4 bg-gray-50 shadow-lg p-6 align-middle\">\n                        <form onSubmit={handleRegister}>\n                            <TextField\n                                label=\"Username\"\n                                placeholder=\"Enter username\"\n                                type=\"text\"\n                                onChange={handleUsernameChange}\n                            />\n                            {usernameError !== null ? (\n                                <p className=\"text-red-600\">{usernameError}</p>\n                            ) : null}\n                            <TextField\n                                label=\"Password\"\n                                placeholder=\"Enter password\"\n                                type=\"password\"\n                                onChange={handlePasswordChange}\n                            />\n                            {passwordError !== null ? (\n                                <p className=\"text-red-600\">{passwordError}</p>\n                            ) : null}\n                            <TextField\n                                label=\"RealmId\"\n                                placeholder=\"Enter RealmId\"\n                                type=\"text\"\n                                onChange={handleRealmIdChange}\n                            />\n                            {realmIdError !== null ? (\n                                <p className=\"text-red-600\">{realmIdError}</p>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                className=\"submitBtn bg-blue-600\"\n                            >\n                                Register\n                            </button>\n                            {successMessage !== null ? (\n                                <p className=\"text-green-600 text-center my-2\">\n                                    {successMessage}\n                                </p>\n                            ) : null}\n                        </form>\n                    </div>\n\n                    <div>\n                        Already registered?\n                        <Link to={LOGIN_ROUTE}>\n                            <p className=\"inline text-blue-600\">\n                                {\" \"}\n                                Login Instead\n                            </p>\n                        </Link>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Register;\n","import { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN_ROUTE } from \"../../../Constants\";\n\nfunction ErrorModal(props) {\n    const { setShowErrorModal, type = \"ERROR\", message } = props;\n\n    return (\n        <div className={`w-96 ${type === \"CREATE_OR_EDIT_INVOICE_ERROR\"?\"h-50\":\"h-40\"} fixed top-1/3 left-1/3 bg-white border border-black rounded-lg`}>\n            {/* dialog */}\n            <div className=\"relative p-8 w-full max-w-md m-auto flex-col flex\">\n                <div className=\"text-lg\">\n                    <FontAwesomeIcon\n                        icon={faExclamationCircle}\n                        color=\"#FFA500\"\n                        className=\"mr-2\"\n                    />\n                    {message}\n                </div>\n                {type === \"SESSION_EXPIRED\" ? (\n                    <Link\n                        to={{\n                            pathname: LOGIN_ROUTE,\n                            state: {\n                                isSessionExpired: true,\n                            },\n                        }}\n                    >\n                        <p className=\"submitBtn text-center bg-blue-600\">\n                            Go to login\n                        </p>\n                    </Link>\n                ) : (\n                    <button\n                        className=\"submitBtn text-center bg-blue-600\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setShowErrorModal(false);\n                        }}\n                    >\n                        Close\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ErrorModal;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    PORTAL_ROUTE,\n    PORTAL_CUSTOMERS_ROUTE,\n    PORTAL_ITEMS_ROUTE,\n    PORTAL_INVOICES_ROUTE,\n    BASE_REACT_ROUTE,\n    LOGIN_ROUTE,\n} from \"./../../../../Constants.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faBars,\n    faExclamation,\n    faIcons,\n    faList,\n    faPowerOff,\n    faTimes,\n    faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport { setLocalAuthJwt } from \"../../../../redux/localAuth/localAuthActions.js\";\n\nexport default function Sidebar() {\n    const dispatch = useDispatch();\n    const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\n    return (\n        <>\n            <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\n                <div className=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\">\n                    {/* Toggler */}\n                    <button\n                        className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n                        type=\"button\"\n                        onClick={() =>\n                            setCollapseShow(\"bg-white m-2 py-3 px-6\")\n                        }\n                    >\n                        <FontAwesomeIcon icon={faBars} />\n                    </button>\n                    {/* Brand */}\n                    <Link\n                        className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n                        to={PORTAL_ROUTE}\n                    >\n                        QBO Integration\n                    </Link>\n                    {/* Collapse */}\n                    <div\n                        className={\n                            \"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded \" +\n                            collapseShow\n                        }\n                    >\n                        {/* Collapse header */}\n                        <div className=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\">\n                            <div className=\"flex flex-wrap\">\n                                <div className=\"w-6/12\">\n                                    <Link\n                                        className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\n                                        to=\"/\"\n                                    >\n                                        QBO Integration\n                                    </Link>\n                                </div>\n                                <div className=\"w-6/12 flex justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\n                                        onClick={() =>\n                                            setCollapseShow(\"hidden\")\n                                        }\n                                    >\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Heading */}\n                        <h6 className=\"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\">\n                            QBO Pages\n                        </h6>\n                        {/* Navigation */}\n\n                        <ul className=\"md:flex-col md:min-w-full flex flex-col list-none\">\n                            <li className=\"items-center\">\n                                <Link\n                                    className={\n                                        \"text-xs uppercase py-3 font-bold block \" +\n                                        (window.location.href.indexOf(\n                                            PORTAL_CUSTOMERS_ROUTE\n                                        ) !== -1\n                                            ? \"text-lightBlue-500 hover:text-lightBlue-600\"\n                                            : \"text-blueGray-700 hover:text-blueGray-500\")\n                                    }\n                                    to={PORTAL_CUSTOMERS_ROUTE}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faUser}\n                                        className=\"mr-3\"\n                                    />\n                                    Customers\n                                </Link>\n                            </li>\n\n                            <li className=\"items-center\">\n                                <Link\n                                    className={\n                                        \"text-xs uppercase py-3 font-bold block \" +\n                                        (window.location.href.indexOf(\n                                            PORTAL_ITEMS_ROUTE\n                                        ) !== -1\n                                            ? \"text-lightBlue-500 hover:text-lightBlue-600\"\n                                            : \"text-blueGray-700 hover:text-blueGray-500\")\n                                    }\n                                    to={PORTAL_ITEMS_ROUTE}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faIcons}\n                                        className=\"mr-3\"\n                                    />\n                                    Items\n                                </Link>\n                            </li>\n\n                            <li className=\"items-center\">\n                                <Link\n                                    className={\n                                        \"text-xs uppercase py-3 font-bold block \" +\n                                        (window.location.href.indexOf(\n                                            PORTAL_INVOICES_ROUTE\n                                        ) !== -1\n                                            ? \"text-lightBlue-500 hover:text-lightBlue-600\"\n                                            : \"text-blueGray-700 hover:text-blueGray-500\")\n                                    }\n                                    to={PORTAL_INVOICES_ROUTE}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faList}\n                                        className=\"mr-3\"\n                                    />\n                                    Invoices\n                                </Link>\n                            </li>\n                        </ul>\n\n                        {/* Divider */}\n                        <hr className=\"my-4 md:min-w-full\" />\n\n                        <ul className=\"md:flex-col md:min-w-full flex flex-col list-none md:mb-4\">\n                            <li className=\"items-center\">\n                                <Link\n                                    className=\"text-blueGray-700 hover:text-blueGray-500 text-xs uppercase py-3 font-bold block\"\n                                    to={LOGIN_ROUTE}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        dispatch(setLocalAuthJwt(null));\n                                        localStorage.removeItem(\"session-jwt\");\n                                        localStorage.removeItem(\n                                            \"isQBOConnected\"\n                                        );\n                                    }}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faPowerOff}\n                                        className=\"mr-3\"\n                                        color=\"#FF0000\"\n                                    />\n                                    Logout\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </>\n    );\n}\n","import { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SuccessModal(props) {\n    const { setShowSuccessModal, type, message } = props;\n\n    return (\n        <div className=\"w-96 h-40 fixed top-1/3 left-1/3 bg-white border border-black rounded-lg\">\n            {/* dialog */}\n            <div className=\"relative p-8 w-full max-w-md m-auto flex-col flex\">\n                <div data-test=\"modal-message\" className=\"text-lg\">\n                    <FontAwesomeIcon\n                        icon={faCheckCircle}\n                        color=\"#228B22\"\n                        className=\"mr-2\"\n                    />\n                    {message}\n                </div>\n                <button\n                    data-test=\"modal-button\"\n                    className=\"submitBtn text-center bg-blue-600\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        if (type === \"SaveAndClose\" || type === \"Close\") {\n                            setShowSuccessModal(false);\n                        }\n                    }}\n                >\n                    Close\n                </button>\n            </div>\n        </div>\n    );\n}\n\nSuccessModal.propTypes = {\n    setShowSuccessModal: PropTypes.func,\n    type: PropTypes.string,\n    message: PropTypes.string,\n};\n\nexport default SuccessModal;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nfunction LoadingModal() {\n    return (\n        <div className=\"w-96 h-40 fixed top-1/3 left-1/2 bg-gray-400 rounded-lg\">\n            {/* dialog */}\n            <div className=\"relative p-8 w-full max-w-md m-auto flex-col flex\">\n                <p className=\"text-white text-lg\">Please wait..</p>\n                <Loader type=\"Watch\" color=\"#FFFFFF\" height={80} width={80} />\n            </div>\n        </div>\n    );\n}\n\nexport default LoadingModal;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport ErrorModal from \"../widgets/ErrorModal\";\nimport Sidebar from \"../widgets/notus-react/SideBar\";\nimport SuccessModal from \"../widgets/SuccessModal\";\nimport {\n    FETCH_DATA_FROM_QBO_URL,\n    GET_CURRENT_USER,\n    LOGIN_ROUTE,\n} from \"./../../../Constants.js\";\nimport LoadingModal from \"./../widgets/LoadingModal.js\";\nimport checkSessionExpired from \"./../../utils/checkSessionExpired.js\";\n\nfunction Portal() {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const [showLoading, setShowLoading] = useState(false);\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\n    const [showErrorModal, setShowErrorModal] = useState(false);\n    const [errorModalType, setErrorModalType] = useState(\"ERROR\");\n\n    useEffect(() => {\n        if (jwt !== null && checkSessionExpired() === false)\n            localStorage.setItem(\"isQBOConnected\", true);\n    }, []);\n\n    async function handleFetchDataFromQBO() {\n        try {\n            setShowLoading(true);\n            const currentUser = await axios.get(GET_CURRENT_USER, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            });\n\n            const response = await axios.get(\n                FETCH_DATA_FROM_QBO_URL + `/${await currentUser.data.realmId}`\n            );\n            if (response.status === 204) {\n                setShowLoading(false);\n                setShowSuccessModal(true);\n            } else {\n                setShowLoading(false);\n                setShowErrorModal(true);\n            }\n        } catch (error) {\n            setShowLoading(false);\n            if (error.response.data.code === 401) {\n                setErrorModalType(\"SESSION_EXPIRED\");\n            }\n            setShowErrorModal(true);\n        }\n    }\n\n    return (\n        <>\n            {jwt === null ? (\n                // if the user is not logged in then redirect to login\n                <Redirect to={LOGIN_ROUTE} />\n            ) : (\n                <div>\n                    <Sidebar />\n                    <div className=\"md:ml-64 mt-16 py-4 text-3xl text-center bg-blueGray-100\">\n                        <p>Welcome to the Quick Books Integration portal</p>\n                        <div className=\"text-base mx-3\">\n                            <p className=\"mt-2 lg:mx-52\">\n                                QuickBooks is an accounting software package\n                                developed and marketed by Intuit. QuickBooks\n                                products are geared mainly toward small and\n                                medium-sized businesses and offer on-premises\n                                accounting applications.\n                            </p>\n                            <div className=\"m-3 lg:mx-72 text-left\">\n                                <p>\n                                    This application integrates with QuickBooks\n                                    and allows the user to do the following:\n                                </p>\n                                <ul className=\"ml-4\">\n                                    <li className=\"list-disc\">\n                                        Connect to their account in Quickbooks\n                                    </li>\n                                    <li className=\"list-disc\">\n                                        View their Customers\n                                    </li>\n                                    <li className=\"list-disc\">\n                                        View their Items\n                                    </li>\n                                    <li className=\"list-disc\">\n                                        View, Create, Edit and Delete their\n                                        Invoices\n                                    </li>\n                                </ul>\n                            </div>\n                            <p className=\"m-3\">\n                                All the data and the changes made to them are in\n                                sync the QuickBooks Online(QBO) platform\n                            </p>\n                            {showLoading ? <LoadingModal /> : null}\n                            {showSuccessModal ? (\n                                <SuccessModal\n                                    setShowSuccessModal={setShowSuccessModal}\n                                    type=\"Close\"\n                                    message=\"Fetched all data successfully\"\n                                />\n                            ) : null}\n                            {showErrorModal ? (\n                                <ErrorModal type={errorModalType} />\n                            ) : null}\n                            <button\n                                className=\"roundedPillBtn bg-green-600 mx-auto\"\n                                onClick={handleFetchDataFromQBO}\n                            >\n                                Fetch data from QuickBooks\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Portal;\n","import React from \"react\";\n\nfunction CustomerAndItemTable(props) {\n    const { color = \"light\", title, data } = props;\n\n    return (\n        <>\n            <div\n                className={\n                    \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" +\n                    (color === \"light\"\n                        ? \"bg-white\"\n                        : \"bg-lightBlue-900 text-white\")\n                }\n            >\n                <div className=\"relative w-full p-5 max-w-full flex justify-between\">\n                    <h3\n                        className={\n                            \"font-semibold text-xl \" +\n                            (color === \"light\"\n                                ? \"text-blueGray-700\"\n                                : \"text-white\")\n                        }\n                    >\n                        {title}\n                    </h3>\n                </div>\n                <div className=\"block w-full overflow-x-auto\">\n                    {/* table starts */}\n                    <table className=\"items-center w-full bg-transparent border-collapse\">\n                        <thead>\n                            <tr>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Display Name\"\n                                        : \"Name\"}\n                                </th>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Company Name\"\n                                        : \"Type\"}\n                                </th>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Email\"\n                                        : \"Description\"}\n                                </th>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Billing Address\"\n                                        : \"Sales Price\"}\n                                </th>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Phone Number\"\n                                        : \"Cost Price\"}\n                                </th>\n                                <th\n                                    className={\n                                        \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                        (color === \"light\"\n                                            ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                            : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                    }\n                                >\n                                    {title === \"Customers\"\n                                        ? \"Open Balance\"\n                                        : \"Quantity\"}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>{row(\"light\", data, title)}</tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction row(color = \"light\", data, title) {\n    const rows = [];\n\n    if (data !== undefined) {\n        for (let i = 0; i < data.length; i++) {\n            rows.push(\n                <tr className=\"text-md\" key={data[i].id}>\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 text-left flex items-center\">\n                        {title === \"Customers\"\n                            ? data[i].displayName\n                            : data[i].name}\n                    </th>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {title === \"Customers\"\n                            ? data[i].companyName !== \"null\"\n                                ? data[i].companyName\n                                : \"-\"\n                            : data[i].type}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {title === \"Customers\"\n                            ? data[i].email !== \"null\"\n                                ? data[i].email\n                                : \"-\"\n                            : data[i].description !== \"null\"\n                            ? data[i].description\n                            : \"-\"}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {title === \"Customers\"\n                            ? data[i].billingAddress !== \"null\"\n                                ? data[i].billingAddress\n                                : \"-\"\n                            : `$ ${data[i].salesPrice.toFixed(2)}`}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {title === \"Customers\"\n                            ? data[i].phoneNumber !== \"null\"\n                                ? data[i].phoneNumber\n                                : \"-\"\n                            : `$ ${data[i].costPrice.toFixed(2)}`}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {title === \"Customers\"\n                            ? `$ ${data[i].openBalance.toFixed(2)}`\n                            : data[i].quantity}\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    return rows;\n}\n\nexport default CustomerAndItemTable;\n","export const ADD_ALL_CUSTOMERS = \"ADD_ALL_CUSTOMERS\";\nexport const REMOVE_ALL_CUSTOMERS = \"REMOVE_ALL_CUSTOMERS\";\n","import React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../widgets/notus-react/SideBar.js\";\nimport CustomerAndItemTable from \"../widgets/notus-react/CustomerAndItemTable.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    GET_ALL_CUSTOMERS,\n    LOGIN_ROUTE,\n    PORTAL_ROUTE,\n} from \"../../../Constants.js\";\nimport {\n    addAllCustomers,\n    removeAllCustomers,\n} from \"./../../../redux/quickbooks/customer/customerActions.js\";\nimport ErrorModal from \"../widgets/ErrorModal.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction Customers() {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const customers = useSelector((state) => state.customerReducer.customers);\n    const dispatch = useDispatch();\n    const [isSessionExpired, setIsSessionExpired] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(GET_ALL_CUSTOMERS, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                dispatch(addAllCustomers(response.data));\n            })\n            .catch((error) => {\n                if (error.response.data.code === 401) {\n                    setIsSessionExpired(true);\n                }\n            });\n        // clear the redux state on component did unmount\n        return () => {\n            dispatch(removeAllCustomers());\n        };\n    }, [jwt, dispatch]);\n\n    return (\n        <>\n            {jwt === null ? (\n                // if the user is not logged in then redirect to login\n                <Redirect to={LOGIN_ROUTE} />\n            ) : isSessionExpired ? (\n                <ErrorModal type=\"SESSION_EXPIRED\" />\n            ) : (\n                <>\n                    <Sidebar />\n                    <div className=\"relative md:ml-64 bg-blueGray-100 py-10\">\n                        {customers === null || customers === \"\" ? (\n                            <div className=\"text-center\">\n                                <p className=\"mb-4 text-lg\">\n                                    No customer data available. Please ensure to\n                                    click on \"Fetch data from QuickBooks\" button\n                                    in the portal home page.\n                                </p>\n                                <Link\n                                    to={PORTAL_ROUTE}\n                                    className=\"rounded-full bg-green-600 text-white px-4 py-2\"\n                                >\n                                    Go to Portal Home page\n                                </Link>\n                            </div>\n                        ) : (\n                            <CustomerAndItemTable\n                                title=\"Customers\"\n                                data={customers}\n                            />\n                        )}\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Customers;\n","import { ADD_ALL_CUSTOMERS, REMOVE_ALL_CUSTOMERS } from \"./customerTypes.js\";\n\nexport const addAllCustomers = (customers = []) => {\n    return {\n        type: ADD_ALL_CUSTOMERS,\n        payload: customers,\n    };\n};\n\nexport const removeAllCustomers = () => {\n    return {\n        type: REMOVE_ALL_CUSTOMERS,\n    };\n};\n","export const ADD_ALL_INVOICES = \"ADD_ALL_INVOICES\";\nexport const REMOVE_ALL_INVOICES = \"REMOVE_ALL_INVOICES\";\nexport const REMOVE_INVOICE_BY_INDEX = \"REMOVE_INVOICE_BY_INDEX\";\nexport const ADD_CURRENT_INVOICE = \"ADD_CURRENT_INVOICE\";\nexport const ADD_CURRENT_INVOICE_ITEMS = \"ADD_CURRENT_INVOICE_ITEMS\";\nexport const DELETE_CURRENT_INVOICE_ITEM_BY_INDEX =\n    \"DELETE_CURRENT_INVOICE_ITEM_BY_INDEX\";\nexport const REMOVE_CURRENT_INVOICE = \"REMOVE_CURRENT_INVOICE\";\nexport const REMOVE_CURRENT_INVOICE_ITEMS = \"REMOVE_CURRENT_INVOICE_ITEMS\";\n","import {\n    ADD_ALL_INVOICES,\n    REMOVE_ALL_INVOICES,\n    REMOVE_INVOICE_BY_INDEX,\n    ADD_CURRENT_INVOICE,\n    ADD_CURRENT_INVOICE_ITEMS,\n    DELETE_CURRENT_INVOICE_ITEM_BY_INDEX,\n    REMOVE_CURRENT_INVOICE,\n    REMOVE_CURRENT_INVOICE_ITEMS,\n} from \"./invoiceTypes.js\";\n\nexport const addAllInvoices = (invoices = []) => {\n    return {\n        type: ADD_ALL_INVOICES,\n        payload: invoices,\n    };\n};\n\nexport const removeAllInvoices = () => {\n    return {\n        type: REMOVE_ALL_INVOICES,\n    };\n};\n\nexport const removeInvoiceByIndex = (index) => {\n    return {\n        type: REMOVE_INVOICE_BY_INDEX,\n        payload: index,\n    };\n};\n\nexport const addCurrentInvoice = (invoice = {}) => {\n    return {\n        type: ADD_CURRENT_INVOICE,\n        payload: invoice,\n    };\n};\n\nexport const addCurrentInvoiceItems = (invoiceItems = []) => {\n    return {\n        type: ADD_CURRENT_INVOICE_ITEMS,\n        payload: invoiceItems,\n    };\n};\n\nexport const deleteCurrentInvoiceItemByIndex = (index) => {\n    return {\n        type: DELETE_CURRENT_INVOICE_ITEM_BY_INDEX,\n        payload: index,\n    };\n};\n\nexport const removeCurrentInvoice = () => {\n    return {\n        type: REMOVE_CURRENT_INVOICE,\n    };\n};\n\nexport const removeCurrentInvoiceItems = () => {\n    return {\n        type: REMOVE_CURRENT_INVOICE_ITEMS,\n    };\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faCheckCircle,\n    faExclamationCircle,\n    faEye,\n    faPen,\n    faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    PORTAL_INVOICE_DETAIL_ROUTE,\n    DELETE_INVOICE_BY_ID,\n} from \"../../../../Constants\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorModal from \"../ErrorModal.js\";\nimport LoadingModal from \"../LoadingModal.js\";\nimport { removeInvoiceByIndex } from \"../../../../redux/quickbooks/invoice/invoiceActions\";\n\nfunction InvoiceTable(props) {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const dispatch = useDispatch();\n    const { color = \"light\", title, invoices } = props;\n    const [showErrorModal, setShowErrorModal] = useState(false);\n    const [showLoadingModal, setShowLoadingModal] = useState(false);\n\n    return (\n        <>\n            {showErrorModal ? (\n                <ErrorModal setShowErrorModal={setShowErrorModal} type=\"INVOICE_DELETE_ERROR\" message=\"Error in deleting the invoice\"/>\n            ) : (\n                <div\n                    className={\n                        \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" +\n                        (color === \"light\"\n                            ? \"bg-white\"\n                            : \"bg-lightBlue-900 text-white\")\n                    }\n                >\n                    <div className=\"relative w-full p-5 max-w-full flex justify-between\">\n                        <h3\n                            className={\n                                \"font-semibold text-xl \" +\n                                (color === \"light\"\n                                    ? \"text-blueGray-700\"\n                                    : \"text-white\")\n                            }\n                        >\n                            {title}\n                        </h3>\n                        <Link\n                            to={{\n                                pathname: PORTAL_INVOICE_DETAIL_ROUTE,\n                                state: {\n                                    operation: \"Create\",\n                                },\n                            }}\n                            className=\"rounded-full bg-green-600 text-white px-4 py-2\"\n                        >\n                            Create Invoice\n                        </Link>\n                    </div>\n                    {showLoadingModal ? <LoadingModal /> : null}\n                    <div className=\"block w-full overflow-x-auto\">\n                        {/* Table starts */}\n                        <table className=\"items-center w-full bg-transparent border-collapse\">\n                            <thead>\n                                <tr>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Date\n                                    </th>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        No.\n                                    </th>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Customer\n                                    </th>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Amount\n                                    </th>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Status\n                                    </th>\n                                    <th\n                                        className={\n                                            \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Action\n                                    </th>\n                                    <th\n                                        className={\n                                            \"align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\n                                            (color === \"light\"\n                                                ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\n                                                : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\n                                        }\n                                    >\n                                        Delete\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {row(\n                                    \"light\",\n                                    invoices,\n                                    jwt,\n                                    setShowErrorModal,\n                                    setShowLoadingModal,\n                                    dispatch\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nfunction row(\n    color = \"light\",\n    invoices,\n    jwt,\n    setShowErrorModal,\n    setShowLoadingModal,\n    dispatch\n) {\n    const rows = [];\n\n    function handleDelete(e, invoiceTableId, index) {\n        e.preventDefault();\n        setShowLoadingModal(true);\n        axios\n            .delete(DELETE_INVOICE_BY_ID + `/${invoiceTableId}`, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                setShowLoadingModal(false);\n                if (response.status === 204)\n                    dispatch(removeInvoiceByIndex(index));\n            })\n            .catch((error) => {\n                setShowLoadingModal(false);\n                setShowErrorModal(true);\n            });\n    }\n\n    if (invoices !== undefined) {\n        for (let i = 0; i < invoices.length; i++) {\n            let isOverdue = false;\n            const dueDateString = invoices[i].dueDate;\n            const dueDateEpoch = new Date(dueDateString).getTime();\n            const currentDateEpoch = new Date().getTime();\n\n            const epochDiff = currentDateEpoch - dueDateEpoch;\n\n            let diffInDays = Math.floor(\n                Math.abs(epochDiff) / 1000 / 60 / 60 / 24\n            );\n\n            if (invoices[i].balance !== 0.0) {\n                // if epochDiff is +ve then overdue else not overdue\n                if (epochDiff > 0) {\n                    isOverdue = true;\n                } else {\n                    isOverdue = false;\n                }\n            }\n\n            rows.push(\n                <tr className=\"text-md\" key={invoices[i].invoiceNumber}>\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 text-left flex items-center\">\n                        {/* splitting the data received to get the desired format and changing yyyy-mm-dd to dd-mm-yyyy */}\n                        {invoices[i].invoiceDate\n                            .split(\"T\")[0]\n                            .toString()\n                            .split(\"-\")\n                            .reverse()\n                            .join(\"-\")}\n                    </th>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {invoices[i].invoiceNumber}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {invoices[i].customerName}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        ${invoices[i].amount}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {invoices[i].balance === 0.0 ? null : isOverdue ? (\n                            <FontAwesomeIcon\n                                icon={faExclamationCircle}\n                                color=\"#FFA500\"\n                                className=\"mr-2\"\n                            />\n                        ) : (\n                            <FontAwesomeIcon\n                                icon={faCheckCircle}\n                                color=\"#228B22\"\n                                className=\"mr-2\"\n                            />\n                        )}\n\n                        {invoices[i].balance === 0.0\n                            ? \"Deposited\"\n                            : isOverdue\n                            ? `Overdue ${diffInDays} days`\n                            : `Due in ${diffInDays} days`}\n                    </td>\n                    <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4\">\n                        {invoices[i].balance === 0.0 ? (\n                            <Link\n                                to={{\n                                    pathname: PORTAL_INVOICE_DETAIL_ROUTE,\n                                    state: {\n                                        invoiceTableId: invoices[i].id,\n                                        operation: \"View\",\n                                    },\n                                }}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faEye}\n                                    color=\"#32A6E9\"\n                                    className=\"mr-2\"\n                                />\n                                View\n                            </Link>\n                        ) : (\n                            <Link\n                                to={{\n                                    pathname: PORTAL_INVOICE_DETAIL_ROUTE,\n                                    state: {\n                                        invoiceTableId: invoices[i].id,\n                                        operation: \"Edit\",\n                                    },\n                                }}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faPen}\n                                    color=\"#32A6E9\"\n                                    className=\"mr-2\"\n                                />\n                                Edit\n                            </Link>\n                        )}\n                    </td>\n                    <td>\n                        <button\n                            className=\"ml-4\"\n                            onClick={(e) => handleDelete(e, invoices[i].id, i)}\n                        >\n                            <FontAwesomeIcon\n                                icon={faTrashAlt}\n                                color=\"#FF0000\"\n                            />\n                        </button>\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    return rows;\n}\n\nexport default InvoiceTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"../widgets/notus-react/SideBar.js\";\nimport InvoiceTable from \"../widgets/notus-react/InvoiceTable.js\";\nimport {\n    GET_ALL_INVOICES,\n    LOGIN_ROUTE,\n    PORTAL_ROUTE,\n} from \"./../../../Constants.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    addAllInvoices,\n    removeAllInvoices,\n    removeCurrentInvoiceItems,\n    removeCurrentInvoice,\n} from \"./../../../redux/quickbooks/invoice/invoiceActions.js\";\nimport ErrorModal from \"../widgets/ErrorModal.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction Invoices() {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const invoices = useSelector((state) => state.invoiceReducer.invoices);\n    const dispatch = useDispatch();\n    const [isSessionExpired, setIsSessionExpired] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(GET_ALL_INVOICES, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                dispatch(addAllInvoices(response.data));\n\n                // clear the current invoice and current cartItems states in redux\n                dispatch(removeCurrentInvoice());\n                dispatch(removeCurrentInvoiceItems());\n            })\n            .catch((error) => {\n                if (error.response.data.code === 401) {\n                    setIsSessionExpired(true);\n                }\n            });\n        // clearing all redux state related to invoice on component did unmount\n        return () => {\n            dispatch(removeAllInvoices());\n        };\n    }, []);\n\n    return (\n        <>\n            {jwt === null ? (\n                // if the user is not logged in then redirect to login\n                <Redirect to={LOGIN_ROUTE} />\n            ) : isSessionExpired ? (\n                <ErrorModal type=\"SESSION_EXPIRED\" />\n            ) : (\n                <>\n                    <Sidebar />\n                    <div className=\"relative md:ml-64 bg-blueGray-100 py-10\">\n                        {invoices === null || invoices === \"\" ? (\n                            <div className=\"text-center\">\n                                <p className=\"mb-4 text-lg\">\n                                    No invoice data available. Please ensure to\n                                    click on \"Fetch data from QuickBooks\" button\n                                    in the portal home page.\n                                </p>\n                                <Link\n                                    to={PORTAL_ROUTE}\n                                    className=\"rounded-full bg-green-600 text-white px-4 py-2\"\n                                >\n                                    Go to Portal Home page\n                                </Link>\n                            </div>\n                        ) : (\n                            <InvoiceTable\n                                title=\"Invoices\"\n                                invoices={invoices}\n                            />\n                        )}\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Invoices;\n","export const ADD_ALL_ITEMS = \"ADD_ALL_ITEMS\";\nexport const REMOVE_ALL_ITEMS = \"REMOVE_ALL_ITEMS\";\n","import React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../widgets/notus-react/SideBar.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    GET_ALL_ITEMS,\n    LOGIN_ROUTE,\n    PORTAL_ROUTE,\n} from \"../../../Constants.js\";\nimport {\n    addAllItems,\n    removeAllItems,\n} from \"./../../../redux/quickbooks/item/itemActions.js\";\nimport CustomerAndItemTable from \"../widgets/notus-react/CustomerAndItemTable.js\";\nimport ErrorModal from \"../widgets/ErrorModal.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction Items() {\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n    const items = useSelector((state) => state.itemReducer.items);\n    const dispatch = useDispatch();\n    const [isSessionExpired, setIsSessionExpired] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(GET_ALL_ITEMS, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                dispatch(addAllItems(response.data));\n            })\n            .catch((error) => {\n                if (error.response.data.code === 401) {\n                    setIsSessionExpired(true);\n                }\n            });\n        // clear the redux state on component did unmount\n        return () => {\n            dispatch(removeAllItems());\n        };\n    }, [jwt, dispatch]);\n\n    return (\n        <>\n            {jwt === null ? (\n                // if the user is not logged in then redirect to login\n                <Redirect to={LOGIN_ROUTE} />\n            ) : isSessionExpired ? (\n                <ErrorModal type=\"SESSION_EXPIRED\" />\n            ) : (\n                <>\n                    <Sidebar />\n                    <div className=\"relative md:ml-64 bg-blueGray-100 py-10\">\n                        {items === null || items === \"\" ? (\n                            <div className=\"text-center\">\n                                <p className=\"mb-4 text-lg\">\n                                    No item data available. Please ensure to\n                                    click on \"Fetch data from QuickBooks\" button\n                                    in the portal home page.\n                                </p>\n                                <Link\n                                    to={PORTAL_ROUTE}\n                                    className=\"rounded-full bg-green-600 text-white px-4 py-2\"\n                                >\n                                    Go to Portal Home page\n                                </Link>\n                            </div>\n                        ) : (\n                            <CustomerAndItemTable title=\"Items\" data={items} />\n                        )}\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Items;\n","import { ADD_ALL_ITEMS, REMOVE_ALL_ITEMS } from \"./itemTypes.js\";\n\nexport const addAllItems = (items = []) => {\n    return {\n        type: ADD_ALL_ITEMS,\n        payload: items,\n    };\n};\n\nexport const removeAllItems = () => {\n    return {\n        type: REMOVE_ALL_ITEMS,\n    };\n};\n","import axios from \"axios\";\nimport { GET_ITEM_BY_ID, POST_INVOICE } from \"./../../Constants.js\";\n\nasync function getQBOItemId(jwt, itemTableId) {\n    try {\n        const response = await axios.get(GET_ITEM_BY_ID + `/${itemTableId}`, {\n            headers: { Authorization: `Bearer ${jwt}` },\n        });\n        return { success: true, data: response.data.qBOId };\n    } catch (error) {\n        return { success: false, data: error };\n    }\n}\n\nasync function addNewInvoice(\n    jwt,\n    invoiceDate,\n    dueDate,\n    qboCustomerId,\n    totalAmount,\n    balance,\n    invoiceItems\n) {\n    let invoiceItemsToPost = [];\n\n    for (let i = 0; i < invoiceItems.length; i++) {\n        let qboItemId = null;\n        const res = await getQBOItemId(jwt, invoiceItems[i].itemTableId); // this should be the itemId from QBO\n        if (res.success === false) {\n            continue;\n        }\n        qboItemId = res.data;\n        invoiceItemsToPost.push({\n            description: invoiceItems[i].itemDescription,\n            amount: invoiceItems[i].itemAmount,\n            itemQBOId: await qboItemId, // this should be the itemId from QBO\n            name: invoiceItems[i].itemName,\n            costPrice: invoiceItems[i].rate,\n            quantity: invoiceItems[i].quantity,\n        });\n    }\n\n    const data = {\n        invoiceDate: invoiceDate,\n        dueDate: dueDate,\n        customerQBOId: qboCustomerId, // this should be the customerId from QBO\n        totalAmount: totalAmount,\n        balance: balance,\n        invoiceItems: invoiceItemsToPost,\n    };\n\n    try {\n        const response = await axios.post(POST_INVOICE + \"/\", data, {\n            headers: { Authorization: `Bearer ${jwt}` },\n        });\n\n        if (response.status === 201) {\n            return true;\n        }\n        return false;\n    } catch (error) {\n        return false;\n    }\n}\n\nexport default addNewInvoice;\n","// this function returns the customerQBO id from the customerName\nfunction getQBOCustomerId(customers, customerName) {\n    let qboCustomerId = null;\n    customers.forEach((customer) => {\n        if (customer.displayName === customerName)\n            qboCustomerId = customer.qBOId;\n    });\n    if (qboCustomerId !== null) return qboCustomerId;\n    else throw Error(\"Customer Id not found\");\n}\n\nexport default getQBOCustomerId;\n","import React, { useState } from \"react\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction InvoiceItemInInvoiceTable(props) {\n    const {\n        invoiceItem,\n        items,\n        operation,\n        updateItemsCallback,\n        deleteItemCallback,\n        index,\n    } = props;\n    const [itemName, setItemName] = useState(invoiceItem.itemName ?? \"\");\n    const [itemDescription, setItemDescription] = useState(\n        invoiceItem.itemDescription ?? \"\"\n    );\n    const [quantity, setQuantity] = useState(invoiceItem.quantity ?? 0);\n    const [rate, setRate] = useState(invoiceItem.rate ?? 0.0);\n    const [itemAmount, setItemAmount] = useState(invoiceItem.itemAmount ?? 0.0);\n    let itemNameListAsString = [];\n    let newinvoiceItem = invoiceItem;\n\n    function handleChange(e, attribute) {\n        e.preventDefault();\n\n        if (attribute === \"itemName\") {\n            setItemName(e.target.value);\n            newinvoiceItem.itemName = e.target.value;\n            if (itemNameListAsString.includes(e.target.value)) {\n                for (let j = 0; j < items.length; j++) {\n                    if (items[j].name === e.target.value) {\n                        newinvoiceItem.itemTableId = items[j].id;\n                        setItemDescription(items[j].description);\n                        newinvoiceItem.itemDescription = items[j].description;\n                        // here I set quantity to 1 whenever new item is selected from dropdown\n                        // I don't give quantity from the items[j] because items[j].quantity is the total quantity in hand\n                        setQuantity(1);\n                        newinvoiceItem.quantity = 1;\n                        setRate(items[j].costPrice);\n                        newinvoiceItem.rate = items[j].costPrice;\n                        // I don't use variable quantity and rate here because they aren't updated by this point\n                        setItemAmount(1 * items[j].costPrice);\n                        newinvoiceItem.itemAmount = items[j].costPrice;\n                        updateItemsCallback(\"Edit\", newinvoiceItem, index);\n                        break;\n                    }\n                }\n            }\n        } else if (attribute === \"quantity\") {\n            setQuantity(e.target.value);\n            newinvoiceItem.quantity = parseInt(e.target.value);\n            setItemAmount(e.target.value * rate);\n            newinvoiceItem.itemAmount = e.target.value * rate;\n            updateItemsCallback(\"Edit\", newinvoiceItem, index);\n        }\n    }\n\n    function handleDelete(e) {\n        e.preventDefault();\n        deleteItemCallback(index);\n    }\n\n    function getItemNameList() {\n        let itemNameList = [];\n\n        if (items !== undefined) {\n            for (let i = 0; i < items.length; i++) {\n                itemNameList.push(\n                    <option value={items[i].name} key={items[i].name} />\n                );\n                itemNameListAsString.push(items[i].name);\n            }\n        }\n        return itemNameList;\n    }\n\n    return (\n        <tr className=\"text-center hover:bg-gray-100\">\n            <td className=\"border-r-2 border-t-2\">{index + 1}</td>\n            <td className=\"border-r-2 border-t-2\">\n                <input\n                    list=\"invoiceItemNames\"\n                    className=\"inline p-2 border border-black xs:w-full\"\n                    placeholder=\"Select an item\"\n                    value={itemName}\n                    disabled={operation === \"View\" ? true : false}\n                    onChange={(e) => handleChange(e, \"itemName\")}\n                />\n                <datalist id=\"invoiceItemNames\">{getItemNameList()}</datalist>\n            </td>\n            <td className=\"border-r-2 border-t-2\">{itemDescription}</td>\n            <td className=\"border-r-2 border-t-2\">\n                <input\n                    type=\"text\"\n                    className=\"block xs:w-full\"\n                    value={quantity}\n                    disabled={operation === \"View\" ? true : false}\n                    onChange={(e) => handleChange(e, \"quantity\")}\n                />\n            </td>\n            <td className=\"border-r-2 border-t-2\">{rate}</td>\n            <td className=\"border-r-2 border-t-2\">{itemAmount}</td>\n            <td className=\"border-t-2\">\n                <button\n                    onClick={(e) => handleDelete(e)}\n                    disabled={operation === \"View\" ? true : false}\n                >\n                    <FontAwesomeIcon icon={faTrashAlt} color=\"#696969\" />\n                </button>\n            </td>\n        </tr>\n    );\n}\n\nexport default InvoiceItemInInvoiceTable;\n","import axios from \"axios\";\nimport { GET_ITEM_BY_ID, PATCH_INVOICE } from \"../../Constants.js\";\n\nasync function getQBOItemId(jwt, itemTableId) {\n    try {\n        const response = await axios.get(GET_ITEM_BY_ID + `/${itemTableId}`, {\n            headers: { Authorization: `Bearer ${jwt}` },\n        });\n        return { success: true, data: response.data.qBOId };\n    } catch (error) {\n        return { success: false, data: error };\n    }\n}\n\nasync function editInvoice(\n    jwt,\n    invoiceId,\n    invoiceDate,\n    dueDate,\n    qboCustomerId,\n    totalAmount,\n    balance,\n    invoiceItems\n) {\n    let invoiceItemsToPost = [];\n\n    for (let i = 0; i < invoiceItems.length; i++) {\n        let qboItemId = null;\n        const itemTableId =\n            invoiceItems[i].fKItems === undefined\n                ? invoiceItems[i].itemTableId\n                : invoiceItems[i].fKItems;\n\n        const res = await getQBOItemId(jwt, itemTableId); // this should be the itemId from QBO\n        if (res.success === false) {\n            continue;\n        }\n        qboItemId = res.data;\n        invoiceItemsToPost.push({\n            description: invoiceItems[i].itemDescription,\n            amount: invoiceItems[i].itemAmount,\n            itemQBOId: await qboItemId, // this should be the itemId from QBO\n            name: invoiceItems[i].itemName,\n            costPrice: invoiceItems[i].rate,\n            quantity: invoiceItems[i].quantity,\n        });\n    }\n\n    const data = {\n        invoiceDate: invoiceDate,\n        dueDate: dueDate,\n        customerQBOId: qboCustomerId, // this should be the customerId from QBO\n        totalAmount: totalAmount,\n        balance: balance,\n        invoiceItems: invoiceItemsToPost,\n    };\n\n    try {\n        const response = await axios.patch(\n            PATCH_INVOICE + `/${invoiceId}`,\n            data,\n            {\n                headers: { Authorization: `Bearer ${jwt}` },\n            }\n        );\n\n        if (response.status === 200) {\n            return true;\n        }\n        return false;\n    } catch (error) {\n        return false;\n    }\n}\n\nexport default editInvoice;\n","import {\n    faHistory,\n    faPlusCircle,\n    faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport {\n    PORTAL_INVOICES_ROUTE,\n    GET_INVOICE_BY_ID,\n    GET_ALL_CUSTOMERS,\n    GET_ALL_ITEMS,\n    LOGIN_ROUTE,\n} from \"../../../Constants.js\";\nimport {\n    addCurrentInvoiceItems,\n    addCurrentInvoice,\n    deleteCurrentInvoiceItemByIndex,\n} from \"../../../redux/quickbooks/invoice/invoiceActions.js\";\nimport addNewInvoice from \"../../utils/addNewInvoice.js\";\nimport getQBOCustomerId from \"../../utils/getQBOCustomerId.js\";\nimport {\n    validateCustomerName,\n    validateDueDate,\n    validateInvoiceDate,\n    validateEmptyInvoiceItem,\n    validateInvalidInvoiceItem,\n    validateInvoiceItemQuantity,\n} from \"../../utils/validateData.js\";\nimport ErrorModal from \"../widgets/ErrorModal.js\";\nimport SuccessModal from \"../widgets/SuccessModal.js\";\nimport LoadingModal from \"../widgets/LoadingModal.js\";\nimport InvoiceItemInInvoiceTable from \"../widgets/InvoiceItemInInvoiceTable.js\";\nimport editInvoice from \"../../utils/editInvoice.js\";\n\nfunction InvoiceDetail(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const reduxState = useSelector((state) => ({\n        currentInvoiceItems: state.invoiceReducer.currentInvoiceItems,\n        currentInvoice: state.invoiceReducer.currentInvoice,\n    }));\n\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n\n    const invoiceTableId =\n        props.location.state !== undefined\n            ? props.location.state.invoiceTableId\n            : null;\n\n    const operation =\n        props.location.state !== undefined\n            ? props.location.state.operation\n            : \"View\";\n\n    // this is a json object of invoice\n    const [stateInvoice, setStateInvoice] = useState({});\n    // this is an array of json objects of invoiceItems\n    const [stateInvoiceItems, setStateInvoiceItems] = useState([]);\n    // this is an array of json objects of customers\n    const [customers, setCustomers] = useState([]);\n    // this is an array of json objects of items\n    const [items, setItems] = useState([]);\n\n    const [customerName, setCustomerName] = useState(\"\");\n    const [customerEmail, setCustomerEmail] = useState(\"\");\n    const [balance, setBalance] = useState(0.0);\n    const [billingAddress, setBillingAddress] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n    const [invoiceDate, setInvoiceDate] = useState(\"\");\n    const [totalAmount, setTotalAmount] = useState(0.0);\n    const [amountReceived, setAmountReceived] = useState(0.0);\n\n    const [customerNameError, setCustomerNameError] = useState(null);\n    const [invoiceDateError, setInvoiceDateError] = useState(null);\n    const [dueDateError, setDueDateError] = useState(null);\n    const [totalAmountError, setTotalAmountError] = useState(null);\n    const [invoiceItemsError, setInvoiceItemsError] = useState(null);\n\n    const [showLoadingModal, setShowLoadingModal] = useState(false);\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\n    const [showErrorModal, setShowErrorModal] = useState(false);\n\n    let customerNameListAsString = [];\n\n    useEffect(() => {\n        // if the operation is create then the invoice won't be available\n        // therefore no need for GET_INVOICE_BY_ID api call\n        if (operation !== \"Create\") {\n            axios\n                .get(GET_INVOICE_BY_ID + `/${invoiceTableId}`, {\n                    headers: { Authorization: `Bearer ${jwt}` },\n                })\n                .then((response) => {\n                    dispatch(addCurrentInvoice(response.data.invoice));\n                    setStateInvoice(response.data.invoice);\n                    dispatch(\n                        addCurrentInvoiceItems(response.data.invoiceItems)\n                    );\n                    setStateInvoiceItems(response.data.invoiceItems);\n\n                    setCustomerName(response.data.invoice.customerName);\n                    setCustomerEmail(response.data.invoice.customerEmail);\n                    setBalance(response.data.invoice.balance);\n                    setTotalAmount(response.data.invoice.amount);\n                    setBillingAddress(response.data.invoice.billingAddress);\n                    const rawInvoiceDate = response.data.invoice.invoiceDate;\n                    const formattedInvoiceDate = rawInvoiceDate.split(\"T\")[0];\n                    setInvoiceDate(formattedInvoiceDate);\n                    const rawDueDate = response.data.invoice.dueDate;\n                    const formattedDueDate = rawDueDate.split(\"T\")[0];\n                    setDueDate(formattedDueDate);\n                });\n        }\n\n        axios\n            .get(GET_ALL_CUSTOMERS, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                setCustomers(response.data);\n            });\n\n        axios\n            .get(GET_ALL_ITEMS, {\n                headers: { Authorization: `Bearer ${jwt}` },\n            })\n            .then((response) => {\n                setItems(response.data);\n            });\n    }, []);\n\n    function handleChange(e, attribute) {\n        e.preventDefault();\n        let currentInvoice = reduxState.currentInvoice;\n\n        if (attribute === \"customerName\") {\n            setCustomerNameError(null);\n            setCustomerName(e.target.value);\n            currentInvoice.customerName = e.target.value;\n            if (customerNameListAsString.includes(e.target.value)) {\n                for (let j = 0; j < customers.length; j++) {\n                    if (customers[j].displayName === e.target.value) {\n                        setCustomerEmail(customers[j].email);\n                        setBillingAddress(customers[j].billingAddress);\n                        currentInvoice.customerEmail = customers[j].email;\n                        currentInvoice.billingAddress =\n                            customers[j].billingAddress;\n                        break;\n                    }\n                }\n            }\n        } else if (attribute === \"customerEmail\") {\n            setCustomerEmail(e.target.value);\n            currentInvoice.customerEmail = e.target.value;\n        } else if (attribute === \"billingAddress\") {\n            setBillingAddress(e.target.value);\n            currentInvoice.billingAddress = e.target.value;\n        } else if (attribute === \"invoiceDate\") {\n            setInvoiceDateError(\"\");\n            setInvoiceDate(e.target.value);\n            currentInvoice.invoiceDate = e.target.value;\n        } else if (attribute === \"dueDate\") {\n            setDueDateError(\"\");\n            setDueDate(e.target.value);\n            currentInvoice.dueDate = e.target.value;\n        }\n\n        setStateInvoice(currentInvoice);\n        dispatch(addCurrentInvoice(currentInvoice));\n    }\n\n    function validateAll() {\n        if (customerName === \"\") {\n            setCustomerNameError(\"Please enter a customer name\");\n            return false;\n        } else if (\n            validateCustomerName(customerName, customerNameListAsString) ===\n            false\n        ) {\n            setCustomerNameError(\n                \"Please select customer name from the list provided\"\n            );\n            return false;\n        } else if (invoiceDate === \"\") {\n            setInvoiceDateError(\"Please enter an invoice date\");\n            return false;\n        } else if (\n            operation === \"Create\" &&\n            validateInvoiceDate(invoiceDate) === false\n        ) {\n            setInvoiceDateError(\"Please select a proper invoice date\");\n            return false;\n        } else if (dueDate === \"\") {\n            setDueDateError(\"Please enter a due date\");\n            return false;\n        } else if (validateDueDate(invoiceDate, dueDate) === false) {\n            setDueDateError(\"Please select a proper due date\");\n            return false;\n        } else if (totalAmount <= 0.0) {\n            setTotalAmountError(\n                \"Please select items to increase total amount above zero\"\n            );\n            return false;\n        } else if (\n            validateEmptyInvoiceItem(reduxState.currentInvoiceItems) === false\n        ) {\n            setInvoiceItemsError(\"Please fill item name for every item added\");\n            return false;\n        } else if (\n            validateInvalidInvoiceItem(\n                reduxState.currentInvoiceItems,\n                items\n            ) === false\n        ) {\n            setInvoiceItemsError(\n                \"Please select item name from the list provided\"\n            );\n            return false;\n        } else if (\n            validateInvoiceItemQuantity(reduxState.currentInvoiceItems) ===\n            false\n        ) {\n            setInvoiceItemsError(\"Please fill quantity for every item added\");\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    async function handleSaveAndClose(e) {\n        e.preventDefault();\n        setInvoiceItemsError(null);\n        if (validateAll() === true) {\n            let isSuccess = false;\n            setShowLoadingModal(true);\n            if (operation === \"Create\") {\n                isSuccess = await addNewInvoice(\n                    jwt,\n                    invoiceDate,\n                    dueDate,\n                    getQBOCustomerId(customers, customerName),\n                    totalAmount,\n                    balance,\n                    reduxState.currentInvoiceItems\n                );\n            } else if (operation === \"Edit\") {\n                isSuccess = await editInvoice(\n                    jwt,\n                    stateInvoice.id,\n                    invoiceDate,\n                    dueDate,\n                    getQBOCustomerId(customers, customerName),\n                    totalAmount,\n                    balance,\n                    reduxState.currentInvoiceItems\n                );\n            }\n\n            if (isSuccess) {\n                setShowLoadingModal(false);\n                setShowSuccessModal(true);\n                setTimeout(function () {\n                    // using history to move to PORTAL_INVOICES_ROUTE without page refresh\n                    history.push(PORTAL_INVOICES_ROUTE);\n                }, 2000);\n            } else {\n                setShowLoadingModal(false);\n                setShowErrorModal(true);\n            }\n        }\n    }\n\n    function handleAddItem(e) {\n        e.preventDefault();\n        reduxState.currentInvoiceItems.push({\n            id: null,\n            itemTableId: null,\n            quantity: null,\n            rate: null,\n            invoiceTableId: null,\n            createdAt: null,\n            updatedAt: null,\n            userId: null,\n            itemName: null,\n            itemDescription: null,\n            itemAmount: null,\n        });\n        setStateInvoiceItems(reduxState.currentInvoiceItems);\n        dispatch(addCurrentInvoiceItems(reduxState.currentInvoiceItems));\n    }\n\n    function getCustomerNameList() {\n        let customerNameList = [];\n\n        if (customers !== undefined) {\n            for (let i = 0; i < customers.length; i++) {\n                customerNameList.push(\n                    <option value={customers[i].displayName} />\n                );\n                customerNameListAsString.push(customers[i].displayName);\n            }\n        }\n        return customerNameList;\n    }\n\n    return (\n        <>\n            {jwt === null ? (\n                // if the user is not logged in then redirect to login\n                <Redirect to={LOGIN_ROUTE} />\n            ) : (\n                <div className=\"bg-blueGray-100\">\n                    {/* top heading */}\n                    <div className=\"flex justify-between p-3\">\n                        <div>\n                            <FontAwesomeIcon\n                                icon={faHistory}\n                                color=\"#696969\"\n                                size=\"2x\"\n                            />\n                            <p className=\"inline font-bold ml-2 text-gray-800 text-3xl\">\n                                Invoice{\" \"}\n                                {operation !== \"Create\"\n                                    ? `#${stateInvoice.invoiceNumber}`\n                                    : null}\n                            </p>\n                        </div>\n                        <Link to={PORTAL_INVOICES_ROUTE}>\n                            <FontAwesomeIcon\n                                icon={faTimes}\n                                color=\"#696969\"\n                                size=\"2x\"\n                            />\n                        </Link>\n                    </div>\n\n                    {showLoadingModal ? <LoadingModal /> : null}\n                    {showSuccessModal ? (\n                        <SuccessModal\n                            setShowSuccessModal={setShowSuccessModal}\n                            type=\"SaveAndClose\"\n                            message=\"Invoice created Successfully\"\n                        />\n                    ) : showErrorModal ? (\n                        <ErrorModal\n                            setShowErrorModal={setShowErrorModal}\n                            type=\"CREATE_OR_EDIT_INVOICE_ERROR\"\n                            message=\"An error occured, please check the data filled. This might be due to invalid invoice date or due date OR invoice date and due date may be given before the start date of one or all of the items listed.\"\n                        />\n                    ) : null}\n                    {/* the margin below is used because the footer hides the data at the bottom */}\n                    <form className=\"mb-64\">\n                        {/* grid wrapper*/}\n                        <div className=\"px-5\">\n                            {/* row 1 */}\n                            <div className=\"grid xs:grid-cols-1 lg:grid-cols-8\">\n                                <div className=\"col-span-2 lg:mr-3\">\n                                    <label\n                                        htmlFor=\"customer\"\n                                        className=\"font-bold\"\n                                    >\n                                        Customer\n                                    </label>\n                                    <div>\n                                        <input\n                                            list=\"customerNames\"\n                                            className=\"inline rounded p-2 border border-black xs:w-full\"\n                                            placeholder=\"Select a customer\"\n                                            value={customerName}\n                                            onChange={(e) =>\n                                                handleChange(e, \"customerName\")\n                                            }\n                                            disabled={\n                                                operation === \"View\"\n                                                    ? true\n                                                    : false\n                                            }\n                                        />\n                                        <datalist id=\"customerNames\">\n                                            {getCustomerNameList()}\n                                        </datalist>\n                                        <p className=\"text-red-600\">\n                                            {customerNameError}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div className=\"col-span-2\">\n                                    <label\n                                        htmlFor=\"customerEmail\"\n                                        className=\"font-bold\"\n                                    >\n                                        Customer email\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"block rounded xs:w-full\"\n                                        placeholder=\"Enter customer email\"\n                                        value={customerEmail}\n                                        // disabled={operation === \"View\" ? true : false}\n                                        disabled\n                                    />\n                                </div>\n                                {/* Empty col */}\n                                <div className=\"col-span-2\"></div>\n                                {/* if balance is zero then show that payment status is \"paid\", else show the balance due amount */}\n                                {operation === \"View\" ? (\n                                    <div className=\"col-span-2 text-right\">\n                                        <span className=\"text-gray-500 font-bold\">\n                                            PAYMENT STATUS\n                                        </span>\n                                        <p className=\"font-bold text-4xl\">\n                                            PAID\n                                        </p>\n                                    </div>\n                                ) : (\n                                    <div className=\"col-span-2 text-right\">\n                                        <span className=\"text-gray-500 font-bold\">\n                                            BALANCE DUE\n                                        </span>\n                                        <p className=\"font-bold text-4xl\">\n                                            ${balance.toFixed(2)}\n                                        </p>\n                                        {/* {operation === \"Edit\" ? (\n                                            <button\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    setAmountReceived(\n                                                        totalAmount\n                                                    );\n                                                    setBalance(0);\n                                                }}\n                                                className=\"roundedPillDarkBorderedBtn mt-2 text-sm bg-transparent right-0 hover:bg-white\"\n                                            >\n                                                Receive total payment\n                                            </button>\n                                        ) : null} */}\n                                    </div>\n                                )}\n                            </div>\n\n                            {/* row 2 */}\n                            <div className=\"grid xs:mt-8 lg:mt-16 xs:grid-cols-1 lg:grid-cols-8\">\n                                <div className=\"col-span-2 lg:mr-3\">\n                                    <label\n                                        htmlFor=\"billingAddress\"\n                                        className=\"font-bold\"\n                                    >\n                                        Billing Address\n                                    </label>\n                                    <textarea\n                                        name=\"billing\"\n                                        id=\"billing\"\n                                        cols=\"20\"\n                                        rows=\"3\"\n                                        className=\"block rounded xs:w-full\"\n                                        value={billingAddress}\n                                        onChange={(e) =>\n                                            handleChange(e, \"billingAddress\")\n                                        }\n                                        disabled\n                                    ></textarea>\n                                </div>\n\n                                <div className=\"col-span-1\">\n                                    <label\n                                        htmlFor=\"invoiceDate\"\n                                        className=\"font-bold\"\n                                    >\n                                        Invoice Date\n                                    </label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"block rounded border\"\n                                        value={invoiceDate}\n                                        onChange={(e) =>\n                                            handleChange(e, \"invoiceDate\")\n                                        }\n                                        disabled={\n                                            operation === \"View\" ? true : false\n                                        }\n                                    />\n                                    <p className=\"text-red-600\">\n                                        {invoiceDateError}\n                                    </p>\n                                </div>\n\n                                <div className=\"col-span-1\">\n                                    <label\n                                        htmlFor=\"dueDate\"\n                                        className=\"font-bold\"\n                                    >\n                                        Due Date\n                                    </label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"block rounded border xs:w-full\"\n                                        value={dueDate}\n                                        onChange={(e) =>\n                                            handleChange(e, \"dueDate\")\n                                        }\n                                        disabled={\n                                            operation === \"View\" ? true : false\n                                        }\n                                    />\n                                    <p className=\"text-red-600\">\n                                        {dueDateError}\n                                    </p>\n                                </div>\n\n                                {/* empty col */}\n                                <div className=\"col-span-2\"></div>\n                            </div>\n                            <p className=\"text-red-600\">{totalAmountError}</p>\n                            {/* table starts */}\n                            <div className=\"table w-full mt-5 p-4\">\n                                <table className=\"table-auto border-collapse w-full p-4\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                #\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                PRODUCT/SERVICE\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                DESCRIPTION\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                QTY\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                RATE\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase border-r-2 lg:table-cell\">\n                                                AMOUNT\n                                            </th>\n                                            <th className=\"p-3 font-bold uppercase lg:table-cell\"></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {showItems(\n                                            stateInvoiceItems,\n                                            reduxState.currentInvoiceItems\n                                        )}\n                                    </tbody>\n                                </table>\n                                <p className=\"text-red-600\">\n                                    {invoiceItemsError}\n                                </p>\n                                {operation === \"View\" ? null : (\n                                    <button\n                                        title=\"Add an item\"\n                                        onClick={(e) => handleAddItem(e)}\n                                    >\n                                        <FontAwesomeIcon\n                                            icon={faPlusCircle}\n                                            color=\"#228B22\"\n                                            size=\"2x\"\n                                        />\n                                    </button>\n                                )}\n                            </div>\n                            {/* table ends */}\n                            {/* amount description table starts */}\n                            <table className=\"float-right font-bold text-xl w-96 text-right\">\n                                <tbody>\n                                    <tr>\n                                        <td>Total</td>\n                                        <td>${totalAmount.toFixed(2)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Amount Received</td>\n                                        <td>\n                                            $\n                                            {operation === \"View\"\n                                                ? totalAmount.toFixed(2)\n                                                : amountReceived.toFixed(2)}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Balance due</td>\n                                        <td>${balance.toFixed(2)}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            {/* amount description table ends */}\n                        </div>\n                    </form>\n\n                    {/* sticky footer */}\n\n                    {operation === \"View\" ? (\n                        <div className=\"bg-gray-800 text-white fixed left-0 bottom-0 justify-between px-2  h-16 w-full\">\n                            <Link\n                                to={PORTAL_INVOICES_ROUTE}\n                                className=\"roundedPillBtn bg-green-700 rounded-pill float-right hover:bg-green-500\"\n                            >\n                                Close\n                            </Link>\n                        </div>\n                    ) : (\n                        <div className=\"bg-gray-800 text-white fixed left-0 bottom-0 justify-between px-2  h-16 w-full flex flex-row\">\n                            <div\n                                id=\"footer-left\"\n                                className=\"flex flex-row mb-2\"\n                            >\n                                <Link\n                                    to={PORTAL_INVOICES_ROUTE}\n                                    className=\"roundedPillBorderedBtn bg-transparent rounded-pill mr-2 hover:bg-white hover:text-black\"\n                                >\n                                    Cancel\n                                </Link>\n                            </div>\n\n                            <div\n                                id=\"footer-right\"\n                                className=\"flex flex-row mb-2\"\n                            >\n                                <Link\n                                    to={PORTAL_INVOICES_ROUTE}\n                                    className=\"roundedPillBtn bg-green-700 rounded-pill hover:bg-green-500\"\n                                    onClick={(e) => handleSaveAndClose(e)}\n                                >\n                                    Save and Close\n                                </Link>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </>\n    );\n\n    function showItems(stateInvoiceItems, reduxInvoiceItems) {\n        let rows = [];\n\n        // type can be \"View\", \"Edit\" or \"Create\"\n        function updateStateInvoiceItems(type, newInvoiceItem, index) {\n            reduxInvoiceItems[index] = newInvoiceItem;\n            updateAmount(reduxInvoiceItems);\n            setStateInvoiceItems(reduxInvoiceItems);\n            dispatch(addCurrentInvoiceItems(reduxInvoiceItems));\n        }\n\n        function deleteStateInvoiceItem(index) {\n            let tempInvoiceItems = [\n                ...stateInvoiceItems.slice(0, index),\n                ...stateInvoiceItems.slice(index + 1),\n            ];\n            setStateInvoiceItems([\n                ...stateInvoiceItems.slice(0, index),\n                ...stateInvoiceItems.slice(index + 1),\n            ]);\n            updateAmount(tempInvoiceItems);\n            dispatch(deleteCurrentInvoiceItemByIndex(index));\n        }\n\n        // this function calculates and updates the amount and balance\n        function updateAmount(reduxInvoiceItems) {\n            let total = 0.0;\n            reduxInvoiceItems.forEach((reduxInvoiceItem) => {\n                total += reduxInvoiceItem.itemAmount;\n            });\n            setTotalAmountError(null);\n            setTotalAmount(total);\n            setBalance(total);\n            if (operation === \"Create\") setBalance(total);\n        }\n\n        if (stateInvoiceItems !== undefined) {\n            for (let i = 0; i < stateInvoiceItems.length; i++) {\n                rows.push(\n                    <InvoiceItemInInvoiceTable\n                        invoiceItem={stateInvoiceItems[i]}\n                        items={items}\n                        operation={operation}\n                        index={i}\n                        updateItemsCallback={updateStateInvoiceItems}\n                        deleteItemCallback={deleteStateInvoiceItem}\n                        key={stateInvoiceItems[i].id}\n                    />\n                );\n            }\n        }\n        return rows;\n    }\n}\n\nexport default InvoiceDetail;\n","// this function checks if the customer name given is correct and exists in the customers list or not\nexport function validateCustomerName(customerName, customerNameListAsString) {\n    return customerNameListAsString.includes(customerName);\n}\n\n// this function checks if the invoiceDate is given in the future or not\nexport function validateInvoiceDate(invoiceDate) {\n    if (Date.parse(invoiceDate) > new Date().getTime()) return true;\n    return false;\n}\n\n// this function checks if the dueDate is given after invoiceDate or not\nexport function validateDueDate(invoiceDate, dueDate) {\n    if (Date.parse(dueDate) > Date.parse(invoiceDate)) return true;\n    return false;\n}\n\n// this function checks if any invoiceItem is name is empty\nexport function validateEmptyInvoiceItem(invoiceItems) {\n    for (let i = 0; i < invoiceItems.length; i++) {\n        if (invoiceItems.itemName === null || invoiceItems.itemName === \"\")\n            return false;\n    }\n    return true;\n}\n\n// this function checks if any invoiceItem is name is invalid\nexport function validateInvalidInvoiceItem(invoiceItems, items) {\n    let itemNameListAsString = [];\n\n    if (items !== undefined) {\n        for (let i = 0; i < items.length; i++) {\n            itemNameListAsString.push(items[i].name);\n        }\n    }\n    for (let i = 0; i < invoiceItems.length; i++) {\n        if (!itemNameListAsString.includes(invoiceItems[i].itemName)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// this function checks if any invoiceItem quantity is zero\nexport function validateInvoiceItemQuantity(invoiceItems) {\n    for (let i = 0; i < invoiceItems.length; i++) {\n        if (invoiceItems[i].quantity === null || invoiceItems[i].quantity === 0)\n            return false;\n    }\n    return true;\n}\n","import React from \"react\";\n\nfunction NoPageFound() {\n    return (\n        // Complete this page\n        <div data-test=\"no-page-found-div\" className=\"text-center text-lg\">\n            No Page Found\n        </div>\n    );\n}\n\nexport default NoPageFound;\n","import Login from \"./components/ui/screens/Login.js\";\nimport Register from \"./components/ui/screens/Register.js\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Portal from \"./components/ui/screens/Portal.js\";\nimport { setLocalAuthJwt } from \"./redux/localAuth/localAuthActions.js\";\nimport {\n    LOGIN_ROUTE,\n    REGISTER_ROUTE,\n    PORTAL_ROUTE,\n    PORTAL_CUSTOMERS_ROUTE,\n    PORTAL_ITEMS_ROUTE,\n    PORTAL_INVOICES_ROUTE,\n    PORTAL_INVOICE_DETAIL_ROUTE,\n} from \"./Constants.js\";\nimport Customers from \"./components/ui/screens/Customers.js\";\nimport Invoices from \"./components/ui/screens/Invoices.js\";\nimport Items from \"./components/ui/screens/Items.js\";\nimport InvoiceDetail from \"./components/ui/screens/InvoiceDetail.js\";\nimport NoPageFound from \"./components/ui/screens/NoPageFound.js\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const jwt = useSelector((state) => state.localAuthReducer.jwt);\n\n    // check if session variable has jwt or not\n    let session_jwt = localStorage.getItem(\"session-jwt\");\n    session_jwt = session_jwt !== null ? JSON.parse(session_jwt) : null;\n    let isSessionExpired = false;\n\n    if (\n        session_jwt !== null &&\n        session_jwt.value.token !== null &&\n        session_jwt.value.token !== \"\" &&\n        session_jwt.expiry > new Date().getTime()\n    ) {\n        dispatch(setLocalAuthJwt(session_jwt.value.token));\n    } else if (\n        session_jwt !== null &&\n        session_jwt.expiry < new Date().getTime()\n    ) {\n        isSessionExpired = true;\n    }\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/qbapp\" component={Login}>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => {\n                                return jwt === null || jwt === \"\" ? (\n                                    <Redirect\n                                        to={{\n                                            pathname: LOGIN_ROUTE,\n                                            state: {\n                                                isSessionExpired:\n                                                    isSessionExpired,\n                                            },\n                                        }}\n                                    />\n                                ) : (\n                                    <Redirect to={PORTAL_ROUTE} />\n                                );\n                            }}\n                        />\n                        <Route path={LOGIN_ROUTE} exact component={Login} />\n                        <Route\n                            path={REGISTER_ROUTE}\n                            exact\n                            component={Register}\n                        />\n                        <Route path={PORTAL_ROUTE} exact component={Portal} />\n                        <Route\n                            path={PORTAL_CUSTOMERS_ROUTE}\n                            exact\n                            component={Customers}\n                        />\n                        <Route\n                            path={PORTAL_ITEMS_ROUTE}\n                            exact\n                            component={Items}\n                        />\n                        <Route\n                            path={PORTAL_INVOICES_ROUTE}\n                            exact\n                            component={Invoices}\n                        />\n                        <Route\n                            path={PORTAL_INVOICE_DETAIL_ROUTE}\n                            exact\n                            component={InvoiceDetail}\n                        />\n                        <Route component={NoPageFound} />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_LOCAL_AUTH_JWT } from \"./localAuthTypes.js\";\n\nexport const initialState = {\n    jwt: null,\n};\n\nconst localAuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_LOCAL_AUTH_JWT:\n            return {\n                ...state,\n                jwt: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default localAuthReducer;\n","import {\n    ADD_ALL_INVOICES,\n    REMOVE_ALL_INVOICES,\n    ADD_CURRENT_INVOICE_ITEMS,\n    ADD_CURRENT_INVOICE,\n    REMOVE_CURRENT_INVOICE,\n    REMOVE_CURRENT_INVOICE_ITEMS,\n    DELETE_CURRENT_INVOICE_ITEM_BY_INDEX,\n    REMOVE_INVOICE_BY_INDEX,\n} from \"./invoiceTypes.js\";\n\nexport const initialState = {\n    invoices: [],\n    currentInvoice: {},\n    currentInvoiceItems: [],\n};\n\nconst invoiceReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALL_INVOICES:\n            return {\n                ...state,\n                invoices: action.payload,\n            };\n        case REMOVE_ALL_INVOICES:\n            return {\n                ...state,\n                invoices: [],\n            };\n        case REMOVE_INVOICE_BY_INDEX:\n            return {\n                ...state,\n                invoices: [\n                    // here action.payload is the index of the invoice to be deleted\n                    ...state.invoices.slice(0, action.payload),\n                    ...state.invoices.slice(action.payload + 1),\n                ],\n            };\n        case ADD_CURRENT_INVOICE:\n            return {\n                ...state,\n                currentInvoice: action.payload,\n            };\n        case ADD_CURRENT_INVOICE_ITEMS:\n            return {\n                ...state,\n                currentInvoiceItems: action.payload,\n            };\n        case DELETE_CURRENT_INVOICE_ITEM_BY_INDEX:\n            return {\n                ...state,\n                currentInvoiceItems: [\n                    // here action.payload is the index of the item to be deleted\n                    ...state.currentInvoiceItems.slice(0, action.payload),\n                    ...state.currentInvoiceItems.slice(action.payload + 1),\n                ],\n            };\n        case REMOVE_CURRENT_INVOICE:\n            return {\n                ...state,\n                currentInvoice: {},\n            };\n        case REMOVE_CURRENT_INVOICE_ITEMS:\n            return {\n                ...state,\n                currentInvoiceItems: [],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default invoiceReducer;\n","import { ADD_ALL_ITEMS, REMOVE_ALL_ITEMS } from \"./itemTypes.js\";\n\nexport const initialState = {\n    items: [],\n};\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALL_ITEMS:\n            return {\n                ...state,\n                items: action.payload,\n            };\n        case REMOVE_ALL_ITEMS:\n            return {\n                ...state,\n                items: [],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default itemReducer;\n","import { ADD_ALL_CUSTOMERS, REMOVE_ALL_CUSTOMERS } from \"./customerTypes.js\";\n\nexport const initialState = {\n    customers: [],\n};\n\nconst customerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALL_CUSTOMERS:\n            return {\n                ...state,\n                customers: action.payload,\n            };\n        case REMOVE_ALL_CUSTOMERS:\n            return {\n                ...state,\n                customers: [],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default customerReducer;\n","import { combineReducers } from \"redux\";\nimport localAuthReducer from \"./localAuth/localAuthReducer.js\";\nimport invoiceReducer from \"./quickbooks/invoice/invoiceReducer.js\";\nimport itemReducer from \"./quickbooks/item/itemReducer.js\";\nimport customerReducer from \"./quickbooks/customer/customerReducer.js\";\n\nconst rootReducer = combineReducers({\n    localAuthReducer,\n    invoiceReducer,\n    itemReducer,\n    customerReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer.js\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(logger))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}